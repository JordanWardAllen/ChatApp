{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/chat.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction ChatComponent_div_0_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const msg_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", msg_r2.sender, \": \", msg_r2.chatMsg, \"\");\n  }\n}\n\nfunction ChatComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵelementStart(2, \"form\");\n    i0.ɵɵelementStart(3, \"div\", 2);\n    i0.ɵɵelementStart(4, \"label\", 3);\n    i0.ɵɵtext(5, \"New Message\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_div_0_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.chatMsg = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 2);\n    i0.ɵɵelementStart(8, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_0_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.chat(ctx_r5.chatMsg);\n    });\n    i0.ɵɵtext(9, \"Send\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"h2\");\n    i0.ɵɵtext(11, \"Chat messages\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"ul\", 6);\n    i0.ɵɵtemplate(13, ChatComponent_div_0_li_13_Template, 2, 2, \"li\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.chatMsg);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.messages);\n  }\n}\n\nexport let ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(chatService, router) {\n      this.chatService = chatService;\n      this.router = router;\n      this.chatMsg = \"\";\n      this.messages = [];\n      this.newMessage = {};\n      this.isValid = false;\n    }\n\n    ngOnInit() {\n      this.initToConnection();\n\n      if (localStorage.getItem('valid')) {\n        this.isValid = true;\n        console.log(localStorage.getItem('valid'));\n      }\n    }\n\n    initToConnection() {\n      this.chatService.initSocket();\n      this.getMsg();\n    }\n\n    getMsg() {\n      let y = 'test1';\n      this.chatService.sendtest(y);\n      this.ioConnection = this.chatService.test().subscribe(test => {\n        this.messages = [];\n\n        for (let i = 0; i < test.length; i++) {\n          let newMsg = {\n            chatMsg: test[i].chatMsg,\n            sender: test[i].sender,\n            group: test[i].group,\n            channel: test[i].channel\n          };\n          this.messages.push(newMsg);\n        }\n      });\n    }\n\n    chat(chatMsg) {\n      this.newMessage = {\n        chatMsg: this.chatMsg,\n        sender: localStorage.getItem('currentUser'),\n        group: \"group 1\",\n        channel: \"channel 1\"\n      };\n\n      if (this.chatMsg) {\n        this.chatService.sendChat(this.newMessage);\n        this.chatMsg = null;\n        this.getMsg();\n      } else {\n        console.log('Failed to send message. Make sure text box is not empty.');\n      }\n    }\n\n  }\n\n  ChatComponent.ɵfac = function ChatComponent_Factory(t) {\n    return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  ChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatComponent,\n    selectors: [[\"app-chat\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"container\"], [1, \"form-group\"], [\"for\", \"chatMsg\"], [\"type\", \"text\", \"name\", \"chatMsg\", \"id\", \"chatMsg\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"leftCol\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ChatComponent_div_0_Template, 14, 2, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isValid);\n      }\n    },\n    directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i3.NgForOf],\n    styles: [\"\"]\n  });\n  return ChatComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}