{"ast":null,"code":"import { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport * as io from 'socket.io-client';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst SERVER_URL = 'http://localhost:3000/';\nexport let ChatService = /*#__PURE__*/(() => {\n  class ChatService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    initSocket() {\n      this.socket = io(SERVER_URL);\n    }\n\n    onInit() {\n      let observable = new Observable(observer => {\n        this.socket.on('chatMsg', data => observer.next(data));\n      });\n      return observable;\n    } // public onMessage(): Observable<any> {\n    //   let observable = new Observable(observer=>{\n    //     this.socket.on('chatMsg', () => observer.next());\n    //   })\n    //   return observable;\n    // }\n\n\n    test() {\n      let observable = new Observable(observer => {\n        this.socket.on('test', test => observer.next(test));\n      });\n      return observable;\n    }\n\n    sendtest(test) {\n      this.socket.emit('test', test);\n    } // public sendMsg(chatMsg: any): void {\n    //   this.socket.emit('chatMsg', chatMsg);\n    // }\n\n\n    sendChat(chat) {\n      this.socket.emit('chat', chat);\n    }\n\n  }\n\n  ChatService.ɵfac = function ChatService_Factory(t) {\n    return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChatService,\n    factory: ChatService.ɵfac,\n    providedIn: 'root'\n  });\n  return ChatService;\n})();","map":null,"metadata":{},"sourceType":"module"}